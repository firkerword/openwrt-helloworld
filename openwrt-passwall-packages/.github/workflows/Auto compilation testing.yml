#
# Copyright (c) 2023-2024 SMALLPROGRAM <https://github.com/smallprogram>
# Description: Automated compilation testing
#

name: Auto compilation testing

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - '.github/**'
env:
  TZ: Asia/Shanghai
  packages: ${{ github.repository }}

jobs:
  job_auto_compile:
    runs-on: ubuntu-latest
    name: test build (${{ matrix.platform }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: x86_64
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/x86/64/openwrt-sdk-23.05.0-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: aarch64_generic
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/rockchip/armv8/openwrt-sdk-23.05.0-rockchip-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: aarch64_cortex-a53
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/mvebu/cortexa53/openwrt-sdk-23.05.0-mvebu-cortexa53_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: aarch64_cortex-a72
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/mvebu/cortexa72/openwrt-sdk-23.05.0-mvebu-cortexa72_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: arm_cortex-a7
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/mediatek/mt7629/openwrt-sdk-23.05.0-mediatek-mt7629_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a7_neon-vfpv4
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/sunxi/cortexa7/openwrt-sdk-23.05.0-sunxi-cortexa7_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a8_vfpv3
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/sunxi/cortexa8/openwrt-sdk-23.05.0-sunxi-cortexa8_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a9
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/bcm53xx/generic/openwrt-sdk-23.05.0-bcm53xx-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a9_neon
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/zynq/generic/openwrt-sdk-23.05.0-zynq-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a9_vfpv3-d16
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/mvebu/cortexa9/openwrt-sdk-23.05.0-mvebu-cortexa9_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: arm_cortex-a15_neon-vfpv4
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/ipq806x/generic/openwrt-sdk-23.05.0-ipq806x-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz

          - platform: mips_24kc
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/ath79/generic/openwrt-sdk-23.05.0-ath79-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mips_4kec
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/realtek/rtl838x/openwrt-sdk-23.05.0-realtek-rtl838x_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mips_mips32
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/bcm63xx/generic/openwrt-sdk-23.05.0-bcm63xx-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mipsel_24kc
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/ramips/rt288x/openwrt-sdk-23.05.0-ramips-rt288x_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mipsel_74kc
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/ramips/rt3883/openwrt-sdk-23.05.0-ramips-rt3883_gcc-12.3.0_musl.Linux-x86_64.tar.xz

          - platform: mipsel_mips32
            url_sdk: https://downloads.openwrt.org/releases/23.05.0/targets/bcm47xx/generic/openwrt-sdk-23.05.0-bcm47xx-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz

    steps:
    - name: Checkout code
      uses: actions/checkout@main
      with:
        fetch-depth: 0 

    - name: Setup variables
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "BASE_SHA=$(git merge-base refs/remotes/origin/${{ github.base_ref }} ${{ github.event.pull_request.head.sha }})" >> $GITHUB_ENV
          echo "HEAD_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo "is pull_request event!"
          echo "BASE_SHA:$BASE_SHA"
          echo "HEAD_SHA:$HEAD_SHA"
        elif [ "${{ github.event_name }}" == "push" ]; then
          # Use `github.event.before` as the base SHA for push events to capture all changes in the push
          echo "BASE_SHA=${{ github.event.before }}" >> $GITHUB_ENV
          echo "HEAD_SHA=${{ github.event.after }}" >> $GITHUB_ENV
          echo "is push event!"
          echo "BASE_SHA:$BASE_SHA"
          echo "HEAD_SHA:$HEAD_SHA"
        fi

    - name: Detect Changed Directories
      id: detect-changes
      run: |
          echo "Base SHA: $BASE_SHA"
          echo "Head SHA: $HEAD_SHA"
          CHANGED_DIRS=$(git diff --name-only $BASE_SHA $HEAD_SHA | awk -F'/' '{print $1}' | sort -u | tr '\n' ',')
          echo "Changed directories: $CHANGED_DIRS"
          CHANGED_DIRS=${CHANGED_DIRS%,}
          echo "CHANGED_DIRS=$CHANGED_DIRS" >> $GITHUB_ENV

    - name: Initialization ${{ matrix.platform }} compile environment
      run: |
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        echo "install packages!!!!!!"
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://github.com/smallprogram/OpenWrtAction/raw/main/diy_script/official_dependence)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: ${{ matrix.platform }} sdk download
      run: |
        wget ${{ matrix.url_sdk }}
        file_name=$(echo ${{matrix.url_sdk}} | awk -F/ '{print $NF}')
        mkdir sdk && tar -xJf $file_name -C ./sdk --strip-components=1
        cd sdk

    - name: SSH connection to Actions
      uses: mxschmitt/action-tmate@v3.13
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

    - name: ${{ matrix.platform }} feeds configuration packages
      run: |
        cd sdk
        echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-23.05" > feeds.conf
        echo "src-git packages https://github.com/openwrt/packages.git;openwrt-23.05" >> feeds.conf
        echo "src-git luci https://github.com/openwrt/luci.git;openwrt-23.05" >> feeds.conf
        echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-23.05"  >> feeds.conf
        echo "src-git passwall_packages https://github.com/${{ env.packages }}.git;main" >> feeds.conf

        ./scripts/feeds update -a
        ./scripts/feeds install -a -f -p passwall_packages

        echo "CONFIG_ALL_NONSHARED=n" > .config
        echo "CONFIG_ALL_KMODS=n" >> .config
        echo "CONFIG_ALL=n" >> .config
        echo "CONFIG_AUTOREMOVE=n" >> .config
        echo "CONFIG_SIGNED_PACKAGES=n" >> .config
        make defconfig


    - name: ${{ matrix.platform }} download
      run: |
        cd sdk
        make download -j8
        find dl -size -1024c -exec ls -l {} \;

    - name: Compile Changed Packages
      id: compile
      run: |
        cd sdk
        if [ -z "$CHANGED_DIRS" ]; then
          echo "No changes detected in passwall_packages"
          exit 0
        fi
        IFS=',' read -ra DIRS <<< "$CHANGED_DIRS"
        for DIR in "${DIRS[@]}"; do
          if [ -d "package/feeds/passwall_packages/$DIR" ]; then
            echo "Compiling changes in directory: $DIR"
            make package/feeds/passwall_packages/$DIR/compile -j$(nproc) || exit 1
          else
            echo "Directory $DIR does not exist"
            exit 1
          fi
        done

        

